///* ========================================================================
//   #CORE
//   ======================================================================== */

// This core file sets up bcss’ most important setup variables. They
// underpin a lot of how the framework functions and should be modified and
// preconfigured with caution.


// Base typographical styles and baseline grid. You need to define these values
// in pixels: bcss will convert them to more appropriate units.

$_font-size:   16px   !default;
$_line-height: 22.4px !default;





// Spacing values are determined based on your project’s global line height (i.e
// your baseline grid). It is not recommended that you modify these following
// variables (it can break your vertical rhythm), but if you need to, you can.

$_spacing-unit: round($_line-height) !default;


// How many times larger/smaller than the default should our spacing unit
// variants be?

$_spacing-unit-factor-tiny:  0.25 !default;
$_spacing-unit-factor-small: 0.5  !default;
$_spacing-unit-factor-large: 2    !default;
$_spacing-unit-factor-huge:  4    !default;





// Check that the chosen font rules are pixel numbers.

@each $__font-rule in
      $_font-size
      $_line-height {

  @if (type-of($__font-rule) == number) {

    @if (unit($__font-rule) != "px") {
      @error "`#{$__font-rule}` needs to be a pixel value.";
    }

  } @else {
    @error "`#{$__font-rule}` needs to be a number.";
  }

}


// Check that the chosen size factors are unitless numbers.

@each $__spacing-unit in
      $_spacing-unit-factor-tiny
      $_spacing-unit-factor-small
      $_spacing-unit-factor-large
      $_spacing-unit-factor-huge {

  @if (type-of($_spacing-unit) == number) {

    @if (unitless($__spacing-unit) == false) {
      @error "`#{$__spacing-unit}` needs to be unitless.";
    }

  } @else {
    @error "`#{$__spacing-unit}` needs to be a number.";
  }

}


// Core reassignment. Do not alter anything below.

$_spacing-unit-tiny:  round($_spacing-unit * $_spacing-unit-factor-tiny);
$_spacing-unit-small: round($_spacing-unit * $_spacing-unit-factor-small);
$_spacing-unit-large: round($_spacing-unit * $_spacing-unit-factor-large);
$_spacing-unit-huge:  round($_spacing-unit * $_spacing-unit-factor-huge);
