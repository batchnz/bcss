/* ==========================================================================
   #WIDTHS
   ========================================================================== */

/**
 * bcss generates a series of utility classes that give a fluid width to
 * whichever element theyâ€™re applied, e.g.:
 *
 *   <img class="u-1/2" src="" alt="">
 *
 * These classes are most commonly used in conjunction with our layout system,
 * e.g.:
 *
 *   <div class="o-layout__item u-1/2">
 *
 * By default, bcss will also generate responsive variants of each of these
 * classes by using your Sass MQ configuration, e.g.:
 *
 *   <div class="o-layout__item u-1/1 u-1/2@tablet u-1/3@desktop">
 *
 */



// Which fractions would you like in your grid system(s)? By default, bcss
// provides you fractions of one whole, halves, thirds, quarters and fifths,
// e.g.:
//
//   .u-1/2
//   .u-2/5
//   .u-3/4
//   .u-2/3
$_widths: 1 2 3 4 5 !default;


/**
 * A series of width helper classes that you can use to size things like grid
 * systems. Classes take a fraction-like format (e.g. `.u-2/3`). Use these in
 * your markup:
 *
 * <div class="u-7/12">
 *
 * The following will generate widths helper classes based on the fractions
 * defined in the `$_widths` list.
 */


@each $_denominator in $_widths {
  
  @for $_numerator from 1 through $_denominator {
    
    .u-#{$_numerator}\/#{$_denominator} {
      
      @include _suffixer {
        width: ($_numerator / $_denominator) * 100% !important;
      }
    
      
    }
    
  }

}